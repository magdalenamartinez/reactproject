package Componentes;

import java.util.ArrayList;

import javax.swing.text.Document;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpression;
import javax.xml.xpath.XPathFactory;

import org.w3c.dom.Node;
import org.w3c.dom.NodeList;


public class Splitter extends Task{
	//La clase task debe incluir al menos 1 slot de entrada y 1 de salida
	
	//private Slot "Slot de entrada"
	//private Slot "Slot de salida"
	private String buffer; //
	private String xPathExpression;
	
	public Splitter(String xPathExpression) {
		this.setxPathExpression(xPathExpression);
	}

	@Override
	public void run() {
		try {
			XPathFactory xfactory = XPathFactory.newInstance();
	        XPath xpath = xfactory.newXPath();
			XPathExpression allProductsExpression = xpath.compile(xPathExpression);
			NodeList OrderNodes = (NodeList) allProductsExpression.evaluate(/* Pasar el document por medio del slot de entrada*/ d , XPathConstants.NODESET);
			
			for (int i = 0; i < OrderNodes.getLength();i++) {
				Node productName0 = OrderNodes.item(i);
				//Mandar a los slot de salida los nodos
				
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void setxPathExpression(String xPathExpression) {
		this.xPathExpression = xPathExpression;
	}
	
}
